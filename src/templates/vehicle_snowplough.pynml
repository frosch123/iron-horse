<!--! this is the template for snowploughs -->

<tal:include metal:use-macro="load: spriteset_templates_purchase.pynml" />

<!--! 'random_reverse' property is not supported in this template
      'flipped' is user flipping vehicle in depot and *is* supported here
      don't conflate them :) -->
// default graphics chain
spriteset(${vehicle.id}_ss_unflipped_unreversed, "${global_constants.graphics_path}${consist.id}.png") {
  spriteset_template_${vehicle.symmetry_type}_unreversed_${vehicle.vehicle_length}_8_unflipped(10)
}
spriteset(${vehicle.id}_ss_flipped_unreversed, "${global_constants.graphics_path}${consist.id}.png") {
  spriteset_template_${vehicle.symmetry_type}_unreversed_${vehicle.vehicle_length}_8_flipped(10)
}
spriteset(${vehicle.id}_ss_unflipped_reversed, "${global_constants.graphics_path}${consist.id}.png") {
  spriteset_template_${vehicle.symmetry_type}_reversed_${vehicle.vehicle_length}_8_unflipped(10)
}
spriteset(${vehicle.id}_ss_flipped_reversed, "${global_constants.graphics_path}${consist.id}.png") {
  spriteset_template_${vehicle.symmetry_type}_reversed_${vehicle.vehicle_length}_8_flipped(10)
}

<!--! handle user flipped state -->
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_vehicle_last, vehicle_is_flipped) {
    1: return ${vehicle.id}_ss_flipped_reversed;
    return ${vehicle.id}_ss_unflipped_reversed;
}
<!--! handle user flipped state -->
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_vehicle_default, vehicle_is_flipped) {
    1: return ${vehicle.id}_ss_flipped_unreversed;
    return ${vehicle.id}_ss_unflipped_unreversed;
}

switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_check_last, position_in_consist_from_end) {
    0: ${vehicle.id}_switch_graphics_vehicle_last;
    return ${vehicle.id}_switch_graphics_vehicle_default;
}
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_vehicle, num_vehs_in_consist) {
    1: ${vehicle.id}_switch_graphics_vehicle_default;
    return ${vehicle.id}_switch_graphics_check_last;
}


// buy menu graphics chain
spriteset(${vehicle.id}_ss_purchase, "${global_constants.graphics_path}${consist.id}.png") {
  spriteset_template_purchase_${vehicle.id}(10)
}

<!--! purchase sprites always go through a switch in case the template does anything specific for purchase graphics -->
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_purchase, 0) {
    return ${vehicle.id}_ss_purchase;
}

<tal:include metal:use-macro="load: graphics_switches.pynml" />

<tal:optional_capacity_switches condition="vehicle.has_cargo_capacity">
    <tal:include metal:use-macro="load: capacity_switches.pynml" />
</tal:optional_capacity_switches>

<tal:include metal:use-macro="load: properties.pynml" />

